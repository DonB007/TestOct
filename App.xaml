<Application x:Class="TestOct.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TestOct"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush
			x:Key="PrimaryBG"
			Color="#000000" />
        <SolidColorBrush
			x:Key="Darkish"
			Color="#212121" />

        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBox x:Name="PART_TextBox"
						         Text="{Binding Path=SelectedDate, StringFormat='dd-MM-yyyy',
						RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- text box text & cursor -->
        <Style
			TargetType="TextBox">
            <Setter
				Property="Foreground"
				Value="#80D8FF" />
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger
					Property="IsKeyboardFocusWithin"
					Value="True">
                    <Setter
						Property="CaretBrush"
						Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Datagrid style-->
        <Style
			BasedOn="{StaticResource {x:Type DataGridColumnHeader}}"
			TargetType="{x:Type DataGridColumnHeader}">
            <Setter
				Property="Background"
				Value="#AA00FF" />
            <Setter
				Property="FontSize"
				Value="15" />
            <Setter
				Property="FontWeight"
				Value="DemiBold" />
            <Setter
				Property="Padding"
				Value="3,0" />
        </Style>
        <Style
			TargetType="{x:Type DataGrid}">
            <Setter
				Property="ColumnWidth"
				Value="*"></Setter>
            <Setter
				Property="FontSize"
				Value="13"></Setter>
        </Style>
        <!--Selected row color-->
        <Style
			TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <Trigger
					Property="DataGridCell.IsSelected"
					Value="True">
                    <Setter
						Property="Background"
						Value="#DCE775" />
                    <Setter
						Property="Foreground"
						Value="#01579B" />
                    <Setter
						Property="FontWeight"
						Value="DemiBold" />
                </Trigger>
                <Trigger
					Property="IsSelected"
					Value="True">
                    <Setter
						Property="BorderThickness"
						Value="0" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- scroll style -->
        <Style
			x:Key="ScrollBarCustomThumb"
			TargetType="{x:Type Thumb}">
            <Setter
				Property="Template">
                <Setter.Value>
                    <ControlTemplate
						TargetType="{x:Type Thumb}">
                        <Grid
							x:Name="Grid">
                            <Rectangle
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								Width="Auto"
								Height="Auto"
								Fill="Transparent" />
                            <Border
								x:Name="CornerScrollBarRectangle"
								CornerRadius="5"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								Width="Auto"
								Height="Auto"
								Margin="0,1,0,1"
								Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger
								Property="Tag"
								Value="Horizontal">
                                <Setter
									TargetName="CornerScrollBarRectangle"
									Property="Width"
									Value="Auto" />
                                <Setter
									TargetName="CornerScrollBarRectangle"
									Property="Height"
									Value="6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
			TargetType="ScrollBar">
            <Setter
				Property="Stylus.IsFlicksEnabled"
				Value="false" />
            <Setter
				Property="Foreground"
				Value="#F6A55D" />
            <Setter
				Property="Background"
				Value="Transparent" />
            <Setter
				Property="Width"
				Value="7" />
            <Setter
				Property="Template">
                <Setter.Value>
                    <ControlTemplate
						TargetType="{x:Type ScrollBar}">
                        <Grid
							x:Name="GridRoot"
							Width="10"
							Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition
									Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Track
								x:Name="PART_Track"
								Grid.Row="0"
								IsDirectionReversed="true"
								Focusable="false">
                                <Track.Thumb>
                                    <Thumb
										x:Name="Thumb"
										Background="{TemplateBinding Foreground}"
										Style="{DynamicResource ScrollBarCustomThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton
										x:Name="PageUp"
										Command="ScrollBar.PageDownCommand"
										Opacity="0"
										Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton
										x:Name="PageDown"
										Command="ScrollBar.PageUpCommand"
										Opacity="0"
										Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger
								SourceName="Thumb"
								Property="IsMouseOver"
								Value="true">
                                <Setter
									Value="#84FFFF"
									TargetName="Thumb"
									Property="Background" />
                            </Trigger>
                            <Trigger
								SourceName="Thumb"
								Property="IsDragging"
								Value="true">
                                <Setter
									Value="#18FFFF"
									TargetName="Thumb"
									Property="Background" />
                            </Trigger>
                            <Trigger
								Property="IsEnabled"
								Value="false">
                                <Setter
									TargetName="Thumb"
									Property="Visibility"
									Value="Collapsed" />
                            </Trigger>
                            <Trigger
								Property="Orientation"
								Value="Horizontal">
                                <Setter
									TargetName="GridRoot"
									Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform
											Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter
									TargetName="PART_Track"
									Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform
											Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter
									Property="Width"
									Value="Auto" />
                                <Setter
									Property="Height"
									Value="8" />
                                <Setter
									TargetName="Thumb"
									Property="Tag"
									Value="Horizontal" />
                                <Setter
									TargetName="PageDown"
									Property="Command"
									Value="ScrollBar.PageLeftCommand" />
                                <Setter
									TargetName="PageUp"
									Property="Command"
									Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Radio button-->
        <SolidColorBrush
			x:Key="RadioButton.Static.Background"
			Color="Transparent" />
        <SolidColorBrush
			x:Key="RadioButton.Static.Border"
			Color="#FF707070" />
        <SolidColorBrush
			x:Key="RadioButton.MouseOver.Background"
			Color="#995555" />
        <SolidColorBrush
			x:Key="RadioButton.MouseOver.Border"
			Color="#990000" />
        <SolidColorBrush
			x:Key="RadioButton.MouseOver.Foreground"
			Color="#FFFFFF" />
        <SolidColorBrush
			x:Key="RadioButton.IsChecked.Background"
			Color="#00BFA5" />
        <SolidColorBrush
			x:Key="RadioButton.IsChecked.Border"
			Color="#990000" />
        <SolidColorBrush
			x:Key="RadioButton.IsChecked.Foreground"
			Color="#FFFFFF" />
        <SolidColorBrush
			x:Key="RadioButton.IsUnchecked.Background"
			Color="#FFFFFF" />
        <SolidColorBrush
			x:Key="RadioButton.IsUnchecked.Border"
			Color="#990000" />
        <SolidColorBrush
			x:Key="RadioButton.IsUnchecked.Foreground"
			Color="#000000" />
        <SolidColorBrush
			x:Key="RadioButton.Pressed.Background"
			Color="#993333" />
        <SolidColorBrush
			x:Key="RadioButton.Pressed.Border"
			Color="#990000" />
        <SolidColorBrush
			x:Key="RadioButton.Pressed.Foreground"
			Color="#FFFFFF" />
        <SolidColorBrush
			x:Key="RadioButton.Disabled.Background"
			Color="#FFE6E6E6" />
        <SolidColorBrush
			x:Key="RadioButton.Disabled.Border"
			Color="#555555" />
        <SolidColorBrush
			x:Key="RadioButton.Disabled.Foreground"
			Color="#999999" />
        <Style
			x:Key="RightRoundedRadioButtonStyle"
			TargetType="{x:Type RadioButton}">
            <Setter
				Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter
							Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle
										Margin="0"
										StrokeDashArray="1 2"
										SnapsToDevicePixels="true"
										StrokeThickness="1"
										Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter
				Property="HorizontalAlignment"
				Value="Left" />
            <Setter
				Property="Background"
				Value="{StaticResource RadioButton.Static.Background}" />
            <Setter
				Property="BorderBrush"
				Value="{StaticResource RadioButton.Static.Border}" />
            <Setter
				Property="Foreground"
				Value="#40C4FF" />
            <Setter
				Property="BorderThickness"
				Value="1" />
            <Setter
				Property="Template">
                <Setter.Value>
                    <ControlTemplate
						TargetType="{x:Type RadioButton}">
                        <Border
							CornerRadius="0,20,20,0"
							x:Name="templateRoot"
							Focusable="True"
							Background="{TemplateBinding Background}"
							BorderThickness="0.3"
							BorderBrush="{TemplateBinding BorderBrush}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							Margin="{TemplateBinding Margin}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter
								x:Name="contentPresenter"
								Focusable="False"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger
								Property="IsMouseOver"
								Value="true">
                                <Setter
									Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.MouseOver.Background}" />
                                <Setter
									Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.MouseOver.Border}" />
                                <Setter
									Property="Foreground"
									Value="{StaticResource RadioButton.MouseOver.Foreground}" />
                            </Trigger>
                            <Trigger
								Property="IsEnabled"
								Value="false">
                                <Setter
									Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.Disabled.Background}" />
                                <Setter
									Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.Disabled.Border}" />
                                <Setter
									Property="Foreground"
									Value="{StaticResource RadioButton.Disabled.Foreground}" />
                            </Trigger>
                            <Trigger
								Property="IsPressed"
								Value="true">
                                <Setter
									Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.Pressed.Background}" />
                                <Setter
									Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.Pressed.Border}" />
                                <Setter
									Property="Foreground"
									Value="{StaticResource RadioButton.Pressed.Foreground}" />
                            </Trigger>
                            <Trigger
								Property="IsChecked"
								Value="true">
                                <Setter
									Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.IsChecked.Background}" />
                                <Setter
									Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.IsChecked.Border}" />
                                <Setter
									Property="Foreground"
									Value="{StaticResource RadioButton.IsChecked.Foreground}" />
                            </Trigger>
                            <Trigger
								Property="IsChecked"
								Value="{x:Null}">
                                <Setter
									Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.IsUnchecked.Background}" />
                                <Setter
									Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.IsUnchecked.Border}" />
                                <Setter
									Property="Foreground"
									Value="{StaticResource RadioButton.IsUnchecked.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
			x:Key="MyRadioButtonStyle"
			TargetType="{x:Type RadioButton}">
            <Setter
				Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter
							Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle
										Margin="0"
										StrokeDashArray="1 2"
										SnapsToDevicePixels="true"
										StrokeThickness="1"
										Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter
				Property="HorizontalAlignment"
				Value="Left" />
            <Setter
				Property="Background"
				Value="{StaticResource RadioButton.Static.Background}" />
            <Setter
				Property="BorderBrush"
				Value="{StaticResource RadioButton.Static.Border}" />
            <Setter
				Property="Foreground"
				Value="#40C4FF" />
            <Setter
				Property="BorderThickness"
				Value="1" />
            <Setter
				Property="Template">
                <Setter.Value>
                    <ControlTemplate
						TargetType="{x:Type RadioButton}">
                        <Border
							CornerRadius="0"
							x:Name="templateRoot"
							Focusable="True"
							Background="{TemplateBinding Background}"
							BorderThickness="0.3"
							BorderBrush="{TemplateBinding BorderBrush}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							Margin="{TemplateBinding Margin}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter
								x:Name="contentPresenter"
								Focusable="False"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger
								Property="IsMouseOver"
								Value="true">
                                <Setter
									Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.MouseOver.Background}" />
                                <Setter
									Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.MouseOver.Border}" />
                                <Setter
									Property="Foreground"
									Value="{StaticResource RadioButton.MouseOver.Foreground}" />
                            </Trigger>
                            <Trigger
								Property="IsEnabled"
								Value="false">
                                <Setter
									Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.Disabled.Background}" />
                                <Setter
									Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.Disabled.Border}" />
                                <Setter
									Property="Foreground"
									Value="{StaticResource RadioButton.Disabled.Foreground}" />
                            </Trigger>
                            <Trigger
								Property="IsPressed"
								Value="true">
                                <Setter
									Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.Pressed.Background}" />
                                <Setter
									Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.Pressed.Border}" />
                                <Setter
									Property="Foreground"
									Value="{StaticResource RadioButton.Pressed.Foreground}" />
                            </Trigger>
                            <Trigger
								Property="IsChecked"
								Value="true">
                                <Setter
									Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.IsChecked.Background}" />
                                <Setter
									Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.IsChecked.Border}" />
                                <Setter
									Property="Foreground"
									Value="{StaticResource RadioButton.IsChecked.Foreground}" />
                            </Trigger>
                            <Trigger
								Property="IsChecked"
								Value="{x:Null}">
                                <Setter
									Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.IsUnchecked.Background}" />
                                <Setter
									Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.IsUnchecked.Border}" />
                                <Setter
									Property="Foreground"
									Value="{StaticResource RadioButton.IsUnchecked.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
			x:Key="LeftRoundedRadioButtonStyle"
			TargetType="{x:Type RadioButton}">
            <Setter
				Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter
							Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle
										Margin="0"
										StrokeDashArray="1 2"
										SnapsToDevicePixels="true"
										StrokeThickness="1"
										Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter
				Property="HorizontalAlignment"
				Value="Left" />
            <!--<Setter Property="Padding" Value="0"/>-->
            <Setter
				Property="Background"
				Value="{StaticResource RadioButton.Static.Background}" />
            <Setter
				Property="BorderBrush"
				Value="{StaticResource RadioButton.Static.Border}" />
            <Setter
				Property="Foreground"
				Value="#40C4FF" />
            <Setter
				Property="BorderThickness"
				Value="1" />
            <Setter
				Property="Template">
                <Setter.Value>
                    <ControlTemplate
						TargetType="{x:Type RadioButton}">
                        <Border
							CornerRadius="20,0,0,20"
							x:Name="templateRoot"
							Focusable="True"
							Background="{TemplateBinding Background}"
							BorderThickness="0.3"
							BorderBrush="{TemplateBinding BorderBrush}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							Margin="{TemplateBinding Margin}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter
								x:Name="contentPresenter"
								Focusable="False"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger
								Property="IsMouseOver"
								Value="true">
                                <Setter
									Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.MouseOver.Background}" />
                                <Setter
									Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.MouseOver.Border}" />
                                <Setter
									Property="Foreground"
									Value="{StaticResource RadioButton.MouseOver.Foreground}" />
                            </Trigger>
                            <Trigger
								Property="IsEnabled"
								Value="false">
                                <Setter
									Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.Disabled.Background}" />
                                <Setter
									Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.Disabled.Border}" />
                                <Setter
									Property="Foreground"
									Value="{StaticResource RadioButton.Disabled.Foreground}" />
                            </Trigger>
                            <Trigger
								Property="IsPressed"
								Value="true">
                                <Setter
									Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.Pressed.Background}" />
                                <Setter
									Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.Pressed.Border}" />
                                <Setter
									Property="Foreground"
									Value="{StaticResource RadioButton.Pressed.Foreground}" />
                            </Trigger>
                            <Trigger
								Property="IsChecked"
								Value="true">
                                <Setter
									Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.IsChecked.Background}" />
                                <Setter
									Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.IsChecked.Border}" />
                                <Setter
									Property="Foreground"
									Value="{StaticResource RadioButton.IsChecked.Foreground}" />
                            </Trigger>
                            <Trigger
								Property="IsChecked"
								Value="{x:Null}">
                                <Setter
									Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.IsUnchecked.Background}" />
                                <Setter
									Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource RadioButton.IsUnchecked.Border}" />
                                <Setter
									Property="Foreground"
									Value="{StaticResource RadioButton.IsUnchecked.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--TabControl styling-->
        <Style
			x:Key="{x:Type TabControl}"
			TargetType="{x:Type TabControl}">
            <Setter
				Property="BorderThickness"
				Value="0" />
            <Setter
				Property="BorderBrush"
				Value="Transparent" />
            <Setter
				Property="Background"
				Value="Transparent" />
            <Setter
				Property="Template">
                <Setter.Value>
                    <ControlTemplate
						TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition
									Height="Auto" />
                                <RowDefinition
									Height="*" />
                            </Grid.RowDefinitions>
                            <Border
								BorderThickness="0,0,1,1"
								BorderBrush="#D0CEBF"
								Grid.Row="1">
                                <Border
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}">
                                    <Border
										Background="{TemplateBinding Background}">
                                        <ContentPresenter
											ContentSource="SelectedContent" />
                                    </Border>
                                </Border>
                            </Border>
                            <TabPanel
								Grid.Row="0"
								IsItemsHost="true"
								HorizontalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
			TargetType="TabItem">
            <Setter
				Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock
							Text="{Binding}">
                            <TextBlock.Style>
                                <Style
									TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger
											Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}"
											Value="true">
                                            <Setter
												Property="Foreground"
												Value="#CCFF90" />
                                            <Setter
												Property="FontWeight"
												Value="DemiBold" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter
				Property="BorderThickness"
				Value="0" />
            <Setter
				Property="BorderBrush"
				Value="Transparent" />
            <Setter
				Property="Background"
				Value="Transparent" />
            <Setter
				Property="VerticalContentAlignment"
				Value="Center" />
            <Setter
				Property="HorizontalContentAlignment"
				Value="Center" />
            <Setter
				Property="Template">
                <Setter.Value>
                    <ControlTemplate
						TargetType="{x:Type TabItem}">
                        <!--In order to click on the blank part of the TabItem can be successfully selected-->
                        <Border
							Background="Transparent">
                            <Grid>
                                <Grid
									x:Name="g">
                                    <Path
										Fill="{TemplateBinding Background}"
										Margin="0,0,0,-1"
										Data="M 20,40 L 0,40 0,40 C 4,40 10,36 10,30 L 10,10 C 10,0 16,0 20,0 L 155,0  C 165,0 173,0 ,175,6 L175,30 C 175,30 175,38 182,40 Z" />
                                </Grid>
                                <Border
									BorderThickness="{TemplateBinding BorderThickness}"
									Padding="{TemplateBinding Padding}">
                                    <ContentPresenter
										ContentSource="Header"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </Grid>
                        </Border>
                        <!--Add ControlTemplate.Triggers to change the background color of the selected TabItem.-->
                        <ControlTemplate.Triggers>
                            <Trigger
								Property="IsSelected"
								Value="false">
                                <Setter
									Property="Visibility"
									TargetName="g"
									Value="Hidden" />
                                <!--								<Setter
									Property="Foreground"
									Value="Blue" />-->
                            </Trigger>
                            <!--							<Trigger
								Property="IsSelected"
								Value="true">
								<Setter
									Property="Foreground"
									Value="Red" />
								
								<Setter
									Property="FontWeight"
									Value="DemiBold" />
							</Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Button styling-->
        <Style
			TargetType="{x:Type Button}">
            <Setter
				Property="Foreground"
				Value="Yellow" />
            <Setter
				Property="FontFamily"
				Value="Helvetica" />
            <Setter
				Property="FontWeight"
				Value="SemiBold" />
            <Setter
				Property="Background"
				Value="Transparent" />
            <Setter
				Property="Template">
                <Setter.Value>
                    <ControlTemplate
						TargetType="{x:Type Button}">
                        <Border x:Name="btn"
						        Background="{TemplateBinding Background}"
						        CornerRadius="20"
						        BorderThickness="2"
						        BorderBrush="Tomato">
                            <ContentPresenter
								HorizontalAlignment="Center"
								VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger
					Property="IsMouseOver"
					Value="True">
                    <Setter
						Property="Background"
						Value="White" />
                    <Setter
						Property="Opacity"
						Value="0.8" />
                    <Setter
						Property="Foreground"
						Value="Indigo" />
                    <Setter
						Property="FontWeight"
						Value="ExtraBold" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--ComboBox styling-->
        <ControlTemplate
			x:Key="ComboBoxToggleButton"
			TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition
						Width="20" />
                </Grid.ColumnDefinitions>
                <Border
					x:Name="Border"
					Grid.ColumnSpan="2"
					CornerRadius="0"
					Background="#FF3F3F3F"
					BorderBrush="#FF97A0A5"
					BorderThickness="1" />
                <Border
					Grid.Column="0"
					CornerRadius="0"
					Margin="1"
					Background="#FF3F3F3F"
					BorderBrush="#FF97A0A5"
					BorderThickness="0,0,1,0" />
                <Path
					x:Name="Arrow"
					Grid.Column="1"
					Fill="White"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
            </Grid>
        </ControlTemplate>
        <ControlTemplate
			x:Key="ComboBoxTextBox"
			TargetType="{x:Type TextBox}">
            <Border
				x:Name="PART_ContentHost"
				Focusable="False"
				Background="{TemplateBinding Background}" />
        </ControlTemplate>
        <Style
			x:Key="{x:Type ComboBox}"
			TargetType="{x:Type ComboBox}">
            <Setter
				Property="SnapsToDevicePixels"
				Value="true" />
            <Setter
				Property="OverridesDefaultStyle"
				Value="true" />
            <Setter
				Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Auto" />
            <Setter
				Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto" />
            <Setter
				Property="ScrollViewer.CanContentScroll"
				Value="true" />
            <Setter
				Property="MinWidth"
				Value="120" />
            <Setter
				Property="MinHeight"
				Value="20" />
            <Setter
				Property="Foreground"
				Value="White" />
            <Setter
				Property="Template">
                <Setter.Value>
                    <ControlTemplate
						TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton
								Name="ToggleButton"
								Template="{StaticResource ComboBoxToggleButton}"
								Grid.Column="2"
								Focusable="false"
								IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
								ClickMode="Press"></ToggleButton>
                            <ContentPresenter
								Name="ContentSite"
								IsHitTestVisible="False"
								Content="{TemplateBinding SelectionBoxItem}"
								ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
								ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
								Margin="3,3,23,3"
								VerticalAlignment="Center"
								HorizontalAlignment="Left" />
                            <TextBox
								x:Name="PART_EditableTextBox"
								Style="{x:Null}"
								Template="{StaticResource ComboBoxTextBox}"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								Margin="3,3,23,3"
								Focusable="True"
								Background="#FF3F3F3F"
								Foreground="#76FF03"
								Visibility="Hidden"
								IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup
								Name="Popup"
								Placement="Bottom"
								IsOpen="{TemplateBinding IsDropDownOpen}"
								AllowsTransparency="True"
								Focusable="False"
								PopupAnimation="Slide">
                                <Grid
									Name="DropDown"
									SnapsToDevicePixels="True"
									MinWidth="{TemplateBinding ActualWidth}"
									MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
										x:Name="DropDownBorder"
										Background="#FF3F3F3F"
										BorderThickness="1"
										BorderBrush="#888888" />
                                    <ScrollViewer
										Margin="4,6,4,6"
										SnapsToDevicePixels="True">
                                        <StackPanel
											IsItemsHost="True"
											KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger
								Property="HasItems"
								Value="false">
                                <Setter
									TargetName="DropDownBorder"
									Property="MinHeight"
									Value="95" />
                            </Trigger>
                            <Trigger
								Property="IsEnabled"
								Value="false">
                                <Setter
									Property="Foreground"
									Value="#888888" />
                            </Trigger>
                            <Trigger
								Property="IsGrouping"
								Value="true">
                                <Setter
									Property="ScrollViewer.CanContentScroll"
									Value="false" />
                            </Trigger>
                            <Trigger
								SourceName="Popup"
								Property="Popup.AllowsTransparency"
								Value="true">
                                <Setter
									TargetName="DropDownBorder"
									Property="CornerRadius"
									Value="0" />
                                <Setter
									TargetName="DropDownBorder"
									Property="Margin"
									Value="0,2,0,0" />
                            </Trigger>
                            <Trigger
								Property="IsEditable"
								Value="true">
                                <Setter
									Property="IsTabStop"
									Value="false" />
                                <Setter
									TargetName="PART_EditableTextBox"
									Property="Visibility"
									Value="Visible" />
                                <Setter
									TargetName="ContentSite"
									Property="Visibility"
									Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers></Style.Triggers>
        </Style>
        <!-- SimpleStyles: ComboBoxItem -->
        <Style
			x:Key="{x:Type ComboBoxItem}"
			TargetType="{x:Type ComboBoxItem}">
            <Setter
				Property="SnapsToDevicePixels"
				Value="true" />
            <Setter
				Property="Foreground"
				Value="White" />
            <Setter
				Property="OverridesDefaultStyle"
				Value="true" />
            <Setter
				Property="Template">
                <Setter.Value>
                    <ControlTemplate
						TargetType="{x:Type ComboBoxItem}">
                        <Border
							Name="Border"
							Padding="2"
							SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger
								Property="IsHighlighted"
								Value="true">
                                <Setter
									TargetName="Border"
									Property="Background"
									Value="#FF4F4F4F" />
                            </Trigger>
                            <Trigger
								Property="IsEnabled"
								Value="false">
                                <Setter
									Property="Foreground"
									Value="#888888" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
